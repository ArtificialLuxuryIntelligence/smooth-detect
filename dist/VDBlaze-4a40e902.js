var e=require("./index-687f4c3e.js");function t(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}}),t.default=e,t}require("@tensorflow/tfjs-core"),require("@tensorflow/tfjs-backend-webgl"),require("@tensorflow-models/face-landmarks-detection"),require("@tensorflow-models/handpose"),exports.default=function(r){function n(e){return r.call(this,e)||this}e._inheritsLoose(n,r);var o=n.prototype;return o.load=function(){try{var e=this,r=function(r,n){try{var o=Promise.resolve(Promise.resolve().then(function(){return t(require("@tensorflow-models/blazeface"))})).then(function(t){return Promise.resolve(t.load({maxFaces:1})).then(function(t){e.model=t})})}catch(e){return n()}return o&&o.then?o.then(void 0,n):o}(0,function(){console.error("Model not loaded")});return Promise.resolve(r&&r.then?r.then(function(){}):void 0)}catch(e){return Promise.reject(e)}},o.detect=function(e){try{var t=this;return Promise.resolve(t.model.estimateFaces(e)).then(function(e){if(!e.length)return!1;var r=t.__getPredictionData(e[0]),n=t.__getNosePointVectors(r.nose.tip,r.face.center,r.scale);return{int_vectors:n,vectors:n,predictions:e[0]}})}catch(e){return Promise.reject(e)}},o.__getPredictionData=function(t){var r=t.landmarks[2],n=e.distanceCoordinates(t.landmarks[0],t.landmarks[1]),o=t.topLeft,i=t.bottomRight,c=i[0]-o[0],s=i[1]-o[1];return{scale:n/e.FACE_SCALE,face:{topLeft:o,bottomRight:i,width:c,height:s,center:[o[0]+c/2,o[1]+s/2]},nose:{tip:r}}},n}(e.VectorDetector);
//# sourceMappingURL=VDBlaze-4a40e902.js.map
