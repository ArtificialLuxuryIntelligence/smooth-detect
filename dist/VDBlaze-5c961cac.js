var e=require("./index-302c37c4.js");require("@tensorflow/tfjs-core"),require("@tensorflow/tfjs-backend-webgl"),require("@tensorflow-models/face-landmarks-detection"),require("@tensorflow-models/handpose"),exports.default=function(t){function r(e){return t.call(this,e)||this}e._inheritsLoose(r,t);var o=r.prototype;return o.load=function(){try{var e=this;return Promise.resolve(blazeface.load({maxFaces:1})).then(function(t){e.model=t})}catch(e){return Promise.reject(e)}},o.detect=function(e){try{var t=this;return Promise.resolve(t.model.estimateFaces(e)).then(function(e){if(!e.length)return!1;var r=t.__getPredictionData(e[0]),o=t.__getNosePointVectors(r.nose.tip,r.face.center,r.scale);return{int_vectors:o,vectors:o,predictions:e[0]}})}catch(e){return Promise.reject(e)}},o.__getPredictionData=function(t){var r=t.landmarks[2],o=e.distanceCoordinates(t.landmarks[0],t.landmarks[1]),n=t.topLeft,i=t.bottomRight,s=i[0]-n[0],a=i[1]-n[1];return{scale:o/e.FACE_SCALE,face:{topLeft:n,bottomRight:i,width:s,height:a,center:[n[0]+s/2,n[1]+a/2]},nose:{tip:r}}},r}(e.VectorDetector);
//# sourceMappingURL=VDBlaze-5c961cac.js.map
